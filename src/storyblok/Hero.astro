---
import { storyblokEditable } from '@storyblok/astro'
import NetlifyImage from './utils/NetlifyImage.astro'
import RichText from './utils/RichText.astro'

const { blok } = Astro.props

let foregroundColor = blok.foregroundColorInvert ? 'text-base-100' : 'text-base-content'

console.log(foregroundColor)

let bgImgUrl = new URL('.netlify/images', Astro.site)
bgImgUrl.searchParams.set('url', blok?.image.filename)
---

<section {...storyblokEditable(blok)} class="my-0">
  {
    blok.layout === 'center' && !blok.image && (
      <div class="hero min-h-screen">
        <div class="hero-content container text-center">
          <div class={'rich-text ' + foregroundColor}>
            <RichText content={blok.content} />
          </div>
        </div>
      </div>
    )
  }
  {
    blok.layout === 'center' && blok.image && (
      <div id="hero-bg" class="hero min-h-screen" style={`background-image: url(${bgImgUrl});`}>
        <div class="hero-overlay" />
        <div class="hero-content container text-center">
          <div class={'rich-text ' + foregroundColor}>
            <RichText content={blok.content} />
          </div>
        </div>
      </div>
    )
  }
  {
    blok.layout === 'inline' && (
      <div class="hero min-h-screen">
        <div
          class={`hero-content container flex-col ${blok.reversed ? 'lg:flex-row-reverse' : 'lg:flex-row'} justify-center items-center`}>
          {blok.image && (
            <NetlifyImage
              src={blok.image.filename}
              alt={blok.image.alt}
              class="max-w-full sm:max-w-sm md:max-w-md rounded-lg shadow-2xl"
            />
          )}
          <div class={'rich-text ' + foregroundColor}>
            <RichText content={blok.content} />
          </div>
        </div>
      </div>
    )
  }
</section>
