---
// https://htmlhead.dev
// FUTUR : manage other og:type (article, product, profile, website)
// TODO : change ICBM Geo localisation

import { useStoryblokApi } from '@storyblok/astro'
import isPreview from '../../utils/isPreview'

import { converter, formatCss } from 'culori'

import '../../styles/tailwind.css'
import '../../styles/aos.css'
import '../../styles/utils.css'

const storyblokApi = useStoryblokApi()
const { data } = await storyblokApi.get('cdn/stories/global/theme', {
  version: isPreview() ? 'draft' : 'published'
})

const theme = data.story.content

let oklch = converter('oklch')

let css = `
  :root {
    --color-base-100: ${formatCss(oklch(theme.base))};
    --color-base-200: oklch(${oklch(theme.base).l > 0.5 ? oklch(theme.base).l * 0.95 : oklch(theme.base).l * 1.05} ${oklch(theme.base).c} ${oklch(theme.base).h ? oklch(theme.base).h : 0});
    --color-base-300: oklch(${oklch(theme.base).l > 0.5 ? oklch(theme.base).l * 0.9 : oklch(theme.base).l * 1.1} ${oklch(theme.base).c} ${oklch(theme.base).h ? oklch(theme.base).h : 0});
    --color-base-content: ${formatCss(oklch(theme.baseContent))};
    --color-primary: ${formatCss(oklch(theme.primary))};
    --color-primary-content: ${formatCss(oklch(theme.primaryContent))};
    --color-secondary: ${formatCss(oklch(theme.secondary))};
    --color-secondary-content: ${formatCss(oklch(theme.secondaryContent))};
    --color-accent: ${formatCss(oklch(theme.accent))};
    --color-accent-content: ${formatCss(oklch(theme.accentContent))};
    --color-neutral: ${formatCss(oklch(theme.neutral))};
    --color-neutral-content: ${formatCss(oklch(theme.neutralContent))};
    --color-info: ${formatCss(oklch(theme.info))};
    --color-info-content: ${formatCss(oklch(theme.infoContent))};
    --color-success: ${formatCss(oklch(theme.success))};
    --color-success-content: ${formatCss(oklch(theme.successContent))};
    --color-warning: ${formatCss(oklch(theme.warning))};
    --color-warning-content: ${formatCss(oklch(theme.warningContent))};
    --color-error: ${formatCss(oklch(theme.error))};
    --color-error-content: ${formatCss(oklch(theme.errorContent))};
    --radius-selector: ${theme.selectorsRadius}rem;
    --radius-field: ${theme.fieldsRadius}rem;
    --radius-box: ${theme.boxesRadius}rem;
    --radius-box-inside: ${theme.boxesRadius * 0.8}rem;
    --size-selector: ${theme.selectorsSize}px;
    --size-field: ${theme.fieldsSize}px;
    --border: ${theme.bordersSize}px;
    --depth: ${theme.depth ? '1' : '0'};
    --noise: ${theme.noise ? '1' : '0'};
  }
`

css = css.replaceAll('none', '0deg')

if (theme.fonts) {
  theme.fonts.map((font) => {
    css += `
      @font-face {
        font-family: ${font.nom};
        font-style: ${font.style};
        font-weight: ${font.weights};
        src: url('/fonts/${font.nom}.woff2') format('woff2');
        font-display: swap;
      }
      ${font.selector} {
        font-family: ${font.nom}, ${font.fallback};
        ${font.css ? font.css : ''}
      }
    `
  })
}

const {
  title,
  description,
  canonical,
  themeColor,
  themeDarkColor,
  themeLightColor,
  robots,
  ogImage,
  ogImageAlt,
  schema
} = Astro.props
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />

  {title && <title>{title}</title>}

  {themeColor && <meta name="theme-color" content={themeColor} />}
  {themeDarkColor && <meta name="theme-color" media="(prefers-color-scheme: dark)" content={themeDarkColor} />}
  {themeLightColor && <meta name="theme-color" media="(prefers-color-scheme: light)" content={themeLightColor} />}

  <meta name="generator" content={Astro.generator} />

  {canonical && <link rel="canonical" href={Astro.url.href + canonical} />}
  {!canonical && <link rel="canonical" href={Astro.url.href} />}

  {description && <meta name="description" content={description} />}

  {robots && <meta name="robots" content={robots} />}
  {!robots && <meta name="robots" content="all" />}

  <link rel="icon" type="image/png" href="/favicons/favicon-96x96.png" sizes="96x96" />
  <link rel="icon" type="image/svg+xml" href="/favicons/favicon.svg" />
  <link rel="shortcut icon" href="/favicons/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png" />
  <meta name="apple-mobile-web-app-title" content="L'essentiel" />
  <link rel="manifest" href="/favicons/site.webmanifest" />

  {title && <meta property="og:title" content={title} />}
  <meta property="og:type" content="website" />
  {ogImage && <meta property="og:image" content={ogImage} />}
  <meta property="og:url" content={Astro.url.href} />

  {description && <meta property="og:description" content={description} />}
  <meta property="og:locale" content="fr_FR" />
  <meta property="og:site_name" content="huitquatre" />
  {ogImageAlt && <meta property="og:image:alt" content={ogImageAlt} />}

  <meta name="twitter:dnt" content="on" />

  {css && <style set:html={css} />}

  {schema && <script type="application/ld+json" set:html={schema} />}

  {
    import.meta.env.STORYBLOK_IS_PREVIEW === 'no' && (
      <script
        data-goatcounter={`https://${import.meta.env.GOATCOUNTER}.goatcounter.com/count`}
        async
        src="//gc.zgo.at/count.js"
      />
    )
  }

  <slot />
</head>
